task:
============================================
You are required to build a REACT and NODE JS application with PostgreSQL database which has the functionality as stated below.
1. Create 50 records in database with the following column fields “sno, customer name, age, phone, location, created_at” and dummy data
2. Create a single page application to display the above data in table format with search option, and pagination with 20 records per page.
3. The created_at column data has to be displayed in two separate columns as “date” and “time”
4. The search functionality will search the data by the column "name" or "location".
5. There should be an option to sort the data either by "date" or by "time".
EXPLANATION:
************
This SQL snippet creates a table named customers with columns sno, customer_name, age, phone, location, and created_at.
Populate the database with 50 dummy records:
This is a manual step where you would insert dummy data into the customers table using SQL INSERT statements.

Set up the backend server (server.js)
------------------------------------------
It imports required modules (express, sequelize) and sets up an instance of the Express app.
The Sequelize instance is initialized to connect to the PostgreSQL database.
A Sequelize model Customer is defined to represent the customers table.
An Express route (GET /api/customers) is created to handle requests for fetching customer data.
It accepts query parameters for pagination (page), search (search), and sorting (sortBy).
It uses Sequelize's findAndCountAll method to fetch paginated and filtered data from the database based on the query parameters.
The retrieved data is sent back as a JSON response.
Creating a GitHub repository:
-------------------------------
Push the backend and frontend code to separate directories in a GitHub repository.
Ensure that the README.md file includes instructions on how to set up and run the project.
Creating an explanatory video
*******************************************************************

README.md
----------
Set up a Node.js project with framework:
Set up routes for creating, reading, updating, and deleting records.
Install Sequelize and PostgreSQL driver.
************************************************
Create an endpoint to create 50 records with dummy data.
Create an endpoint to retrieve paginated records.
Implement search functionality to filter records by name or location.
Implement sorting functionality by date or time.
Frontend (React)
Set up a React project:
Create a new React project using create-react-app or any other method of your choice.
Create components:
Create a component to display the table with records.
Implement a pagination component to navigate through pages.
Display data in table format:
Add options for sorting records by date or time.
Send sorting criteria to the backend and update the UI with sorted results.


*********************************************************
